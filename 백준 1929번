// 백준 1929번 소수 구하기

#include <iostream>
#include <cassert>
using namespace std;

#define MAX 1000000
int prime[MAX + 1] = {};

int main()
{
	int M, N;
	
	cin >> M >> N;
	assert(M >= 1 && M <= N);
	assert(N >= M && N <= 1000000);

	// 에라토스테네스의 체 방법 사용
	// 2부터 주어진 숫자보다 작은 배열을 만들고 배수를 지워나가는 방법

	// 배열 생성
	for (int i = 2; i <= N; i++)
	{
		prime[i] = i;
	}

	for (int i = 2; i * i <= N; i++)
	{
		// 값이 존재하지 않는 경우
		if (prime[i] == 0)
		{
			continue;
		}

		// 각각의 배수 삭제
		for (int j = i * i; j <= N; j += i)
		{
			prime[j] = 0;
		}
	}

	for (int i = M; i <= N; i++)
	{
		if (prime[i] != 0)
		{
			// endl이랑 \n이 메모리에 영향을 줌
			cout << prime[i] << '\n';
		}
	}
}
